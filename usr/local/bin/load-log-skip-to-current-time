#!/bin/zsh

##############################################################################
#
# Originally posted to rivendell-dev by
# Wayne Merricks <waynemerricks@thevoiceasia.com>
# with Subject: "[RDD] Getting Airplay to Auto Play at correct time"
#
# Original script in BASH, converted to ZSH and added a bit of
# robustness by <dklann@phantommachineworks.com>
#
# This is meant to be run interactively from a terminal or
# non-interactively if log name and station name are passed as command
# line parameters.
#
##############################################################################

zmodload zsh/datetime

# Get zsh functions necessary for this script
[[ -r ${ROOT:-/}usr/local/bin/zsh-functions ]] && source ${ROOT:-/}usr/local/bin/zsh-functions

# Use them if they were passed in, otherwise we will prompt for them
# at the right time.
logName=${1}
stationHostname=${2}
tableSuffix=_LOG

#Get the time now as milliseconds
timeNow=${EPOCHSECONDS}
H=$(( $(strftime "%H" ${timeNow}) * 3600000 ))
M=$(( $(strftime "%M" ${timeNow}) * 60000 ))
S=$(( $(strftime "%S" ${timeNow}) * 1000 ))
millisecondsPastMidnight=$(( H + M + S ))

# Assume the user knows the exact name of the log if they passed it on
# the command line.
if [[ -z "${logName}" ]] ; then
    # Prompt the user for which log to load
    typeset -a logs
    logs=( $(doSQL "SELECT NAME FROM LOGS") )
    x=1; while : ; do
	     for log in ${logs} ; do printf "%2d: %s\n" $((x++)) "${log}"; done
	     read choice\?"Please select a log by entering the number from above: "
	     (( choice > 0 && choice < x )) && break
	     x=1
	 done
    tableName=${logs[choice]}${tableSuffix}
    logName=${logs[choice]}
else
    tableName=${logName}${tableSuffix}
fi

# Query DB and get the line number of the log to skip to
CART=$(doSQL "SELECT ID FROM \`${tableName}\` WHERE START_TIME > 0 AND START_TIME <= ${millisecondsPastMidnight} ORDER BY COUNT DESC LIMIT 1;")

if [[ -n "${CART}" ]] ; then
    if [[ -z "${stationHostname}" ]] ; then
	# Determine the host running RDairplay
	# BUG ALERT! This assumes that hostnames in the Rivendell database
	# match DNS names on the network.
	typeset -a stations
	stations=( $(doSQL "SELECT NAME FROM STATIONS") )
	x=1; while : ; do
		 for station in ${stations} ; do printf "%2d: %s\n" $((x++)) "${station}"; done
		 read choice\?"Please select host on which RDAirplay is running: "
		 (( choice > 0 && choice < x )) && break
		 x=1
	     done
	station=${stations[choice]}
    else
	station=${stationHostname}
    fi

    if ping -w 1 -c 1 -q ${station} > /dev/null 2>&1 ; then
	# Switch the display to "Main Log", make Airplay load the log, and skip to the correct time
	rmlsend --to-host=${station} --from-file=- <<EOF
PW 1!
LL 1 ${logName} -1!
MN 1 ${CART}!
PN 1!
PM 2!
EOF

    else
	echo "ERROR: Could not ping ${station}. Is this the correct host? Is DNS working on this LAN?" >&2
    fi
else
    echo "ERROR: Could not determine current cart at which to position the log (${?})." >&2
fi

exit
